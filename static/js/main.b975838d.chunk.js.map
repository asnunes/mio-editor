{"version":3,"sources":["slate/components/leafs/GenericLeaf.js","slate/renders/renderLeaf.js","slate/components/elements/CodeElement.js","slate/components/elements/HeaderElement.js","slate/components/elements/ImageElement.js","slate/components/elements/MathElement.js","slate/components/elements/DefaultElement.js","slate/renders/renderElement.js","slate/helpers/index.js","services/ImageUploader.js","App.js","slate/plugins/withImage.js","slate/plugins/withInline.js","serviceWorker.js","index.js"],"names":["GenericLeaf","props","attributes","style","getLeafStyle","leaf","children","fontWeight","bold","fontStyle","italic","fontFamily","code","textDecoration","getTextDecoration","getCodeDecoration","decorations","underline","push","strikethrough","length","join","backgroundColor","padding","renderLeaf","CodeElement","HeaderElement","ImageElement","element","selected","useSelected","focused","useFocused","contentEditable","src","base64","getImgStyle","display","maxWidth","maxHeight","boxShadow","MathElement","useState","mathString","setMathString","useEffect","text","position","getMathViewStyle","getMathEditorStyle","MathView","content","Context","script","options","MATH_JAX_OPTIONS","Node","jax","showMathMenu","defaultStyle","inlineSize","margin","borderRadius","left","bottom","transform","background","fontSize","minWidth","opacity","DefaultElement","renderElement","type","MioHelpers","isMarkActive","editor","markType","Editor","nodes","match","node","universal","isLineEmpty","isBlockActive","blockType","toggleMark","isActive","Transforms","setNodes","Text","isText","split","toggleBlock","insertImage","insertMathBlock","onKeyDown","event","Object","keys","HOTKEYS","some","key","isHotkey","onBlockHotkeyDown","onMarkHotkeyDown","onReturnKeydown","setTimeout","preventDefaultForEventAndCall","fn","preventDefault","args","ImageUploader","file","reader","FileReader","Promise","accept","fail","onload","result","onerror","error","readAsDataURL","initialValue","App","useMemo","isVoid","withImage","isInline","includes","withInline","withHistory","withReact","createEditor","imageInput","useRef","JSON","parse","localStorage","getItem","value","setValue","saveInLocalStorage","stringify","setItem","console","log","onChange","id","ref","target","files","then","className","useCallback","autoFocus","spellCheck","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b975838d.chunk.js","sourcesContent":["import React from 'react';\n\nexport const GenericLeaf = props => (\n  <span\n    {...props.attributes}\n    style={getLeafStyle(props.leaf)}\n  >\n    {props.children}\n  </span>\n);\n\nconst getLeafStyle = leaf => ({\n  fontWeight: leaf.bold ? 'bold' : 'normal',\n  fontStyle: leaf.italic ? 'italic' : 'normal',\n  fontFamily: leaf.code ? 'monospace' : 'normal',\n  textDecoration: getTextDecoration(leaf),\n  ...getCodeDecoration(leaf)\n});\n\nconst getTextDecoration = leaf => {\n  const decorations = [];\n  if (leaf.underline) decorations.push('underline');\n  if (leaf.strikethrough) decorations.push('line-through');\n  return decorations.length === 0 ? 'none' : decorations.join(' '); \n};\n\nconst getCodeDecoration = leaf => {\n  return leaf.code ? {\n    fontFamily: leaf.code ? 'monospace' : 'normal',\n    backgroundColor: '#eee',\n    padding: '3px',\n  } : {}\n}\n","import React from 'react';\nimport { GenericLeaf } from '../components/leafs';\n\nexport const renderLeaf = props => <GenericLeaf {...props}/>;","import React from 'react';\n\nexport const CodeElement = props => (\n  <pre {...props.attributes}>\n    <code>{props.children}</code>\n  </pre>\n);\n","import React from 'react';\n\nexport const HeaderElement = props => <h2 {...props.attributes}>{props.children}</h2>;","import React from 'react';\nimport { useSelected, useFocused } from 'slate-react';\n\nexport const ImageElement = ({attributes, element, children}) => {\n  const selected = useSelected();\n  const focused = useFocused();\n  \n  return (\n    <div {...attributes}>\n      <div contentEditable={false}>\n        <img\n          src={element.base64}\n          style={getImgStyle(selected, focused)}\n        />\n      </div>\n      {children}\n    </div>\n  );\n};\n\nconst getImgStyle = (selected, focused) => ({\n  display: 'block',\n  maxWidth: '100%',\n  maxHeight: '20em',\n  boxShadow: `${selected && focused ? '0 0 0 3px #B4D5FF' : 'none'}`\n});\n  \n","import React, { useState, useEffect } from 'react';\nimport { useSelected, useFocused } from 'slate-react';\nimport MathJax from 'react-mathjax2';\n\nexport const MathElement = ({attributes, element, children}) => {\n  const [mathString, setMathString] = useState(\"\");\n\n  const selected = useSelected();\n  const focused = useFocused();\n\n  useEffect(() => setMathString(element.children[0].text || \"\"));\n\n  return (\n    <div {...attributes} style={{position: 'relative'}}>\n      <div style={getMathViewStyle(selected, focused)} contentEditable={false}>\n        <MathView mathString={mathString}/>\n      </div>\n      <div style={getMathEditorStyle(selected, focused)}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nconst MathView = ({mathString}) => {\n  const content = mathString === '' ? 'color(grey)(text(Type an equation below))' : mathString;\n\n  return (\n    <MathJax.Context \n      script=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_SVG\"\n      options={MATH_JAX_OPTIONS}\n    >\n      <div>\n        <MathJax.Node>{content}</MathJax.Node>\n      </div>\n    </MathJax.Context>\n  );\n};\n\nconst MATH_JAX_OPTIONS = {\n  jax: ['input/ascii', 'output/SVG'],\n  showMathMenu: false,\n};\n\nconst getMathViewStyle = (selected, focused) => {\n  const defaultStyle = {\n    inlineSize: 'fit-content',\n    margin: 'auto',\n    padding: '5px',\n    borderRadius: '10px',\n  };\n  \n  if (!selected || !focused) return defaultStyle;\n  return {\n    boxShadow: '0 0 0 2px #80deea',\n    ...defaultStyle\n  };\n};\n\nconst getMathEditorStyle = (selected, focused) => {\n  const defaultStyle = {\n    position: 'absolute',\n    left: '50%',\n    bottom: 0,\n    transform: 'translate(-50%, 120%)',\n    borderRadius: '10px',\n  };\n\n\n  if (!selected || !focused) return { \n    opacity: 0,\n    ...defaultStyle, \n  };\n\n  return {\n    background: '#80deea',\n    fontSize: '0.8em',\n    padding: '3px',\n    minWidth: '20px',\n    ...defaultStyle\n  };  \n};","import React from 'react';\n\nexport const DefaultElement = props => (\n  <p {...props.attributes}>{props.children}</p>\n);\n\n","import React from 'react';\nimport { CodeElement, DefaultElement, HeaderElement, ImageElement, MathElement } from '../components/elements';\n\nexport const renderElement = props => {\n  switch(props.element.type) {\n    case 'header':\n      return <HeaderElement {...props}/>;\n    case 'code':\n      return <CodeElement {...props}/>;\n    case 'image':\n      return <ImageElement {...props}/>;\n    case 'math':\n      return <MathElement {...props}/>;\n    default:\n      return <DefaultElement {...props}/>;\n  }\n};\n\n","import { Editor, Transforms, Text } from \"slate\";\nimport isHotkey from 'is-hotkey';\n\nexport const MioHelpers = {\n  isMarkActive(editor, markType) {\n    const [match] = Editor.nodes(editor, {\n      match: node => node[markType] === true,\n      universal: true,\n    });\n\n    return !!match;\n  },\n  isLineEmpty(editor) {\n    const [match] = Editor.nodes(editor, {\n      match: node => node.text === '',\n    });\n\n    return !!match;\n  },\n  isBlockActive(editor, blockType) {\n    const [match] = Editor.nodes(editor, {\n      match: node => node.type === blockType,\n    });\n    return !!match;\n  },\n  toggleMark(editor, markType) {\n    const isActive = MioHelpers.isMarkActive(editor, markType);\n    Transforms.setNodes(\n      editor,\n      { [markType]: isActive ? null : true },\n      { match: node => Text.isText(node), split: true}\n      );\n  },\n  toggleBlock(editor, blockType) {\n    const isActive = MioHelpers.isBlockActive(editor, blockType);\n    Transforms.setNodes(\n      editor,\n      { type: isActive ? null : blockType },\n    );\n  },\n  insertImage(editor, base64) {\n    Transforms.setNodes(\n      editor,\n      { type: \"image\", base64 }\n    );\n  },\n  insertMathBlock(editor) {\n    const isActive = MioHelpers.isBlockActive(editor, 'math');\n    if (isActive) return;\n\n    Transforms.setNodes(editor, { type: 'math' } );\n  },\n  onKeyDown(event, editor) {\n    Object.keys(HOTKEYS).some(key => {\n      if (isHotkey(key, event)) {\n        HOTKEYS[key](event, editor);\n        return true;\n      }\n    });\n  }\n};\n\nconst HOTKEYS = {\n  \"mod+h\": (event, editor) => onBlockHotkeyDown(event, editor, \"header\"),\n  \"mod+c\": (event, editor) => onMarkHotkeyDown(event, editor, \"code\"),\n  \"mod+b\": (event, editor) => onMarkHotkeyDown(event, editor, \"bold\"),\n  \"mod+s\": (event, editor) => onMarkHotkeyDown(event, editor, \"strikethrough\"),\n  \"mod+i\": (event, editor) => onMarkHotkeyDown(event, editor, \"italic\"),\n  \"mod+u\": (event, editor) => onMarkHotkeyDown(event, editor, \"underline\"),\n  \"mod+=\": (event, editor) => onBlockHotkeyDown(event, editor, \"math\"),\n  \"enter\": (event, editor) => onReturnKeydown(editor)\n};\n\nconst onReturnKeydown = editor => {\n  if (MioHelpers.isBlockActive(editor, \"math\"))\n    setTimeout(() => MioHelpers.toggleBlock(editor, 'paragraph'), 0);\n}\n\nconst onBlockHotkeyDown = (event, editor, blockType) => {\n  preventDefaultForEventAndCall(event, MioHelpers.toggleBlock, editor, blockType);\n};\n\nconst onMarkHotkeyDown = (event, editor, markType) => {\n  preventDefaultForEventAndCall(event, MioHelpers.toggleMark, editor, markType);\n};\n\nconst preventDefaultForEventAndCall = (event, fn, ...args) => {\n  event.preventDefault();\n  fn(...args);\n};","export const ImageUploader = {\n  getBase64FromFile(file) {\n    let reader = new FileReader();\n\n    return new Promise((accept, fail) => {\n      reader.onload = () => accept(reader.result);\n      reader.onerror = () => fail(reader.error);\n      reader.readAsDataURL(file);\n    });\n  }\n};","import React, { useMemo, useState, useCallback, useRef } from 'react';\nimport { createEditor } from 'slate';\nimport { Slate, Editable, withReact } from 'slate-react';\nimport { withHistory } from 'slate-history';\n\nimport { renderLeaf, renderElement } from './slate/renders';\nimport { MioHelpers } from './slate/helpers';\nimport { withInline, withImage } from './slate/plugins';\n\nimport { ImageUploader } from './services';\n\nimport './stylesheets/App.scss';\n\nconst App = () => {\n  const editor = useMemo(() => withImage(withInline(withHistory(withReact(createEditor())))), []);\n  const imageInput = useRef(null);\n  const [value, setValue] = useState(JSON.parse(localStorage.getItem('content')) || initialValue);\n\n  const onValueChange = value => {\n    setValue(value);\n    saveInLocalStorage(value);\n  }\n\n  const saveInLocalStorage = value => {\n    const content = JSON.stringify(value);\n    localStorage.setItem('content', content);\n    console.log(content);\n  }\n\n  const uploadImage = event => {\n    if (event.target.files.length === 0) return; \n    \n    const file = event.target.files[0];\n    ImageUploader.getBase64FromFile(file).then(\n      base64 => MioHelpers.insertImage(editor, base64),\n      error => console.log(error)\n    );\n  };\n  \n  return (\n    <Slate editor={editor} value={value} onChange={onValueChange}>\n      <input\n        id=\"file-upload\"\n        type=\"file\"\n        accept=\"image/png, image/jpeg\"\n        ref={imageInput}\n        onChange={uploadImage}\n      />\n      <div className=\"mio-editor\">\n        <Editable \n          renderLeaf={useCallback(renderLeaf)}\n          renderElement={useCallback(renderElement)}\n          onKeyDown={event => MioHelpers.onKeyDown(event, editor)}\n          autoFocus\n          spellCheck\n        />\n      </div>\n    </Slate>\n  );\n};\n\nconst initialValue = [\n  {\n    type: 'paragraph',\n    children: [{ text: 'A line of a paragraph...'}],\n  },\n]\n\nexport default App;\n\n","export const withImage = editor => {\n  const { isVoid } = editor;\n\n  editor.isVoid = element => {\n    return element.type === 'image' ? true : isVoid(element);\n  };\n\n  return editor;\n};","export const withInline = editor => {\n  editor.isInline = element => {\n    return [\"code\"].includes(element.type);\n  }\n\n  return editor;\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}