{"version":3,"sources":["slate/components/leaves/GenericLeaf.js","slate/renders/renderLeaf.js","slate/components/elements/CodeElement.js","slate/components/elements/HeaderElement.js","slate/components/elements/image-element/ImageElement.js","slate/components/elements/MathElement.js","slate/components/elements/MathInlineElement.js","slate/components/elements/DefaultElement.js","slate/renders/renderElement.js","slate/helpers/index.js","slate/plugins/withInlineMath.js","services/ImageUploader.js","App.js","slate/plugins/withImage.js","slate/plugins/withInline.js","serviceWorker.js","index.js"],"names":["GenericLeaf","props","attributes","style","getLeafStyle","leaf","children","fontWeight","bold","fontStyle","italic","fontFamily","code","textDecoration","getTextDecoration","getCodeDecoration","decorations","underline","push","strikethrough","length","join","backgroundColor","padding","renderLeaf","CodeElement","HeaderElement","ImageElement","element","selected","useSelected","focused","useFocused","editor","useSlate","useState","width","setWidth","height","setHeight","Math","PI","theta","setTheta","imgRef","useRef","minimumWidth","cos","minimumHeight","sin","maximumWidth","maximumHeight","useEffect","setBestImageDimensions","updateElementDimensions","path","size","Transforms","setNodes","at","naturalWidth","current","naturalHeight","naturalTheta","atan","desirableWidth","desirableHeight","min","contentEditable","className","onResizeStop","e","data","ReactEditor","findPath","lockAspectRatio","minConstraints","maxConstraints","ref","src","base64","_getImgStyle","display","boxShadow","MathElement","mathString","setMathString","text","position","getMathViewStyle","getMathEditorStyle","MathView","content","Node","defaultStyle","inlineSize","margin","borderRadius","left","bottom","transform","background","fontSize","minWidth","opacity","MathInlineElement","console","log","_getStyle","inline","DefaultElement","renderElement","type","MioHelpers","isMarkActive","markType","Editor","nodes","match","node","universal","isLineEmpty","isBlockActive","blockType","toggleMark","isActive","Text","isText","split","toggleBlock","insertImage","onKeyDown","event","Object","keys","HOTKEYS","some","key","isHotkey","onBlockHotkeyDown","onMarkHotkeyDown","onMathInlineKeyDown","onReturnKeyDown","preventDefault","insertNodes","setTimeout","preventDefaultForEventAndCall","fn","args","_isThereAMathInlineBlockPrevious","endPoint","previousBlock","_getPreviousBlock","_isCurrentPointTheStartOfLocation","isStart","_noSelection","selection","Range","isCollapsed","_isThereTextBetweenTwo$","first$Index","second$charIndex","_findLastTwoIndexOf","string","char","charLastIndex","lastIndexOf","slice","previousNode","previous","_insertMathInlineAt","range","select","delete","ImageUploader","file","reader","FileReader","Promise","accept","fail","onload","result","onerror","error","readAsDataURL","MATH_JAX_OPTIONS","jax","showMathMenu","initialValue","App","useMemo","insertText","deleteBackward","anchor","blockStart","start","blockRange","focus","blockText","lastSpaceIndex","textAfterLastSpace","especialCharLastButOneRelativeIndex","especialCharLastRelativeIndex","fromLastButOneCharToEndRange","offset","end","mathInlineBlock","mathContent","withInlineMath","isVoid","withImage","isInline","includes","withInline","withHistory","withReact","createEditor","imageInput","JSON","parse","localStorage","getItem","value","setValue","saveInLocalStorage","stringify","setItem","onChange","id","target","files","then","Context","script","options","useCallback","autoFocus","spellCheck","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2d2e6067.chunk.js","sourcesContent":["import React from 'react';\n\nexport const GenericLeaf = props => (\n  <span\n    {...props.attributes}\n    style={getLeafStyle(props.leaf)}\n  >\n    {props.children}\n  </span>\n);\n\nconst getLeafStyle = leaf => ({\n  fontWeight: leaf.bold ? 'bold' : 'normal',\n  fontStyle: leaf.italic ? 'italic' : 'normal',\n  fontFamily: leaf.code ? 'monospace' : 'normal',\n  textDecoration: getTextDecoration(leaf),\n  ...getCodeDecoration(leaf)\n});\n\nconst getTextDecoration = leaf => {\n  const decorations = [];\n  if (leaf.underline) decorations.push('underline');\n  if (leaf.strikethrough) decorations.push('line-through');\n  return decorations.length === 0 ? 'none' : decorations.join(' '); \n};\n\nconst getCodeDecoration = leaf => {\n  return leaf.code ? {\n    fontFamily: leaf.code ? 'monospace' : 'normal',\n    backgroundColor: '#eee',\n    padding: '3px',\n  } : {}\n}\n","import React from 'react';\nimport { GenericLeaf } from '../components/leaves';\n\nexport const renderLeaf = props => <GenericLeaf {...props}/>;","import React from 'react';\n\nexport const CodeElement = props => (\n  <pre {...props.attributes}>\n    <code>{props.children}</code>\n  </pre>\n);\n","import React from 'react';\n\nexport const HeaderElement = props => <h2 {...props.attributes}>{props.children}</h2>;","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelected, useFocused, ReactEditor, useSlate } from 'slate-react';\nimport { Transforms } from 'slate';\nimport { ResizableBox } from 'react-resizable';\n\nimport './style.css';\n\nexport const ImageElement = ({attributes, element, children}) => {\n  const selected = useSelected();\n  const focused = useFocused();\n  const editor = useSlate();\n\n  const [width, setWidth] = useState(element.width || 200);\n  const [height, setHeight] = useState(element.height || 200);\n  const [theta, setTheta] = useState(Math.PI / 4); // 45 degrees or aspect ratio = 1\n  \n  const imgRef = useRef(null);\n  \n  const minimumWidth = 30 * Math.cos(theta);\n  const minimumHeight = 30 * Math.sin(theta);\n\n  const maximumWidth = 500 * Math.cos(theta);\n  const maximumHeight = 500 * Math.sin(theta);\n\n  useEffect(setBestImageDimensions, []);\n\n  const onResizeStop = (e, data) => {\n    const path = ReactEditor.findPath(editor, element);\n    updateElementDimensions(path, data.size);\n  };\n\n  const updateElementDimensions = (path, size) => {\n    Transforms.setNodes(\n      editor,\n      { width: size.width, height: size.height },\n      { at: path },\n      )\n  };\n  \n  const setBestImageDimensions = () => {\n    const naturalWidth = imgRef.current.naturalWidth;\n    const naturalHeight = imgRef.current.naturalHeight;\n    const naturalTheta = Math.atan(naturalHeight/naturalWidth);\n\n    const desirableWidth = 355 * Math.cos(naturalTheta);\n    const desirableHeight = 355 * Math.sin(naturalTheta);\n\n    setWidth(Math.min(naturalWidth, desirableWidth));\n    setHeight(Math.min(naturalHeight, desirableHeight));\n    setTheta(naturalTheta);\n  };\n  \n  return (\n    <div {...attributes}>\n      <div contentEditable={false}>\n        <ResizableBox\n          className=\"box\"\n          width={width}\n          height={height}\n          onResizeStop={onResizeStop}\n          lockAspectRatio={true}\n          minConstraints={[minimumWidth, minimumHeight]}\n          maxConstraints={[maximumWidth, maximumHeight]}\n        >\n          <img\n            ref={imgRef}\n            src={element.base64}\n            style={_getImgStyle(selected, focused)}\n          />\n        </ResizableBox>\n      </div>\n      {children}\n    </div>\n  );\n};\n\nconst _getImgStyle = (selected, focused) => ({\n  display: 'block',\n  width: '100%',\n  height: '100%',\n   \n  boxShadow: `${selected && focused ? '0 0 0 3px #B4D5FF' : 'none'}`\n});\n  \n","import React, { useState, useEffect } from 'react';\nimport { useSelected, useFocused } from 'slate-react';\nimport MathJax from 'react-mathjax2';\n\nexport const MathElement = ({attributes, element, children}) => {\n  const [mathString, setMathString] = useState(\"\");\n\n  const selected = useSelected();\n  const focused = useFocused();\n\n  useEffect(() => setMathString(element.children[0].text || \"\"));\n\n  return (\n    <div {...attributes} style={{position: 'relative'}}>\n      <div style={getMathViewStyle(selected, focused)} contentEditable={false}>\n        <MathView mathString={mathString}/>\n      </div>\n      <div style={getMathEditorStyle(selected, focused)}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nconst MathView = ({mathString}) => {\n  const content = mathString === '' ? 'color(grey)(text(Type an equation below))' : mathString;\n\n  return (\n    <div>\n      <MathJax.Node>{content}</MathJax.Node>\n    </div>\n  );\n};\n\nconst getMathViewStyle = (selected, focused) => {\n  const defaultStyle = {\n    inlineSize: 'fit-content',\n    margin: 'auto',\n    padding: '5px',\n    borderRadius: '10px',\n  };\n  \n  if (!selected || !focused) return defaultStyle;\n  return {\n    boxShadow: '0 0 0 2px #80deea',\n    ...defaultStyle\n  };\n};\n\nconst getMathEditorStyle = (selected, focused) => {\n  const defaultStyle = {\n    position: 'absolute',\n    left: '50%',\n    bottom: 0,\n    transform: 'translate(-50%, 120%)',\n    borderRadius: '10px',\n  };\n\n\n  if (!selected || !focused) return { \n    opacity: 0,\n    ...defaultStyle, \n  };\n\n  return {\n    background: '#80deea',\n    fontSize: '0.8em',\n    padding: '3px',\n    minWidth: '20px',\n    ...defaultStyle\n  };  \n};","import React from 'react';\nimport { useSelected, useFocused } from 'slate-react';\nimport MathJax from 'react-mathjax2';\n\nexport const MathInlineElement = ({attributes, element, children}) => {\n  const selected = useSelected();\n  const focused = useFocused();\n\n  console.log(element.content);\n\n  return (\n    <span\n      {...attributes}\n      style={_getStyle(selected, focused)}\n      contentEditable={false}\n    >\n      <MathJax.Node inline>{element.content}</MathJax.Node>\n      {children}\n    </span>\n  );\n};\n\nconst _getStyle = (selected, focused) => ({\n  boxShadow: `${selected && focused ? '0 0 0 3px #B4D5FF' : 'none'}`\n});","import React from 'react';\n\nexport const DefaultElement = props => (\n  <p {...props.attributes}>{props.children}</p>\n);\n\n","import React from 'react';\nimport { CodeElement, DefaultElement, HeaderElement, ImageElement, MathElement, MathInlineElement } from '../components/elements';\n\nexport const renderElement = props => {\n  switch(props.element.type) {\n    case 'header':\n      return <HeaderElement {...props}/>;\n    case 'code':\n      return <CodeElement {...props}/>;\n    case 'image':\n      return <ImageElement {...props}/>;\n    case 'math':\n      return <MathElement {...props}/>;\n    case 'mathInline':\n      return <MathInlineElement {...props}/>;\n    default:\n      return <DefaultElement {...props}/>;\n  }\n};\n\n","import { Editor, Transforms, Text } from \"slate\";\nimport isHotkey from 'is-hotkey';\n\nexport const MioHelpers = {\n  isMarkActive(editor, markType) {\n    const [match] = Editor.nodes(editor, {\n      match: node => node[markType] === true,\n      universal: true,\n    });\n\n    return !!match;\n  },\n  isLineEmpty(editor) {\n    const [match] = Editor.nodes(editor, {\n      match: node => node.text === '',\n    });\n\n    return !!match;\n  },\n  isBlockActive(editor, blockType) {\n    const [match] = Editor.nodes(editor, {\n      match: node => node.type === blockType,\n    });\n    return !!match;\n  },\n  toggleMark(editor, markType) {\n    const isActive = MioHelpers.isMarkActive(editor, markType);\n    Transforms.setNodes(\n      editor,\n      { [markType]: isActive ? null : true },\n      { match: node => Text.isText(node), split: true }\n      );\n  },\n  toggleBlock(editor, blockType) {\n    const isActive = MioHelpers.isBlockActive(editor, blockType);\n    Transforms.setNodes(\n      editor,\n      { type: isActive ? null : blockType },\n    );\n  },\n  insertImage(editor, base64) {\n    Transforms.setNodes(\n      editor,\n      { type: \"image\", base64 }\n    );\n  },\n  onKeyDown(event, editor) {\n    Object.keys(HOTKEYS).some(key => {\n      if (isHotkey(key, event)) {\n        HOTKEYS[key](event, editor);\n        return true;\n      }\n    });\n  }\n};\n\nconst HOTKEYS = {\n  \"mod+h\": (event, editor) => onBlockHotkeyDown(event, editor, \"header\"),\n  \"mod+c\": (event, editor) => onMarkHotkeyDown(event, editor, \"code\"),\n  \"mod+b\": (event, editor) => onMarkHotkeyDown(event, editor, \"bold\"),\n  \"mod+s\": (event, editor) => onMarkHotkeyDown(event, editor, \"strikethrough\"),\n  \"mod+i\": (event, editor) => onMarkHotkeyDown(event, editor, \"italic\"),\n  \"mod+u\": (event, editor) => onMarkHotkeyDown(event, editor, \"underline\"),\n  \"mod+=\": (event, editor) => onBlockHotkeyDown(event, editor, \"math\"),\n  \"mod+e\": (event, editor) => onMathInlineKeyDown(event, editor),\n  \"enter\": (event, editor) => onReturnKeyDown(editor),\n};\n\nconst onMathInlineKeyDown = (event, editor) => {\n  event.preventDefault();\n  Transforms.insertNodes(\n    editor,\n    { type: \"mathInline\", children: [{ text: \"😎\"}] },\n  );\n}\n\nconst onReturnKeyDown = editor => {\n  if (MioHelpers.isBlockActive(editor, \"math\"))\n    setTimeout(() => MioHelpers.toggleBlock(editor, 'paragraph'), 0);\n}\n\nconst onBlockHotkeyDown = (event, editor, blockType) => {\n  preventDefaultForEventAndCall(event, MioHelpers.toggleBlock, editor, blockType);\n};\n\nconst onMarkHotkeyDown = (event, editor, markType) => {\n  preventDefaultForEventAndCall(event, MioHelpers.toggleMark, editor, markType);\n};\n\nconst preventDefaultForEventAndCall = (event, fn, ...args) => {\n  event.preventDefault();\n  fn(...args);\n};","import { Range, Editor, Transforms } from 'slate';\n\nexport const withInlineMath = editor => {\n  const { insertText, deleteBackward } = editor;\n\n  editor.insertText = text => {\n    const { selection } = editor;\n\n    if (_noSelection(selection)) {\n      const { anchor } = selection;\n      const { path } = anchor;\n      const blockStart = Editor.start(editor, path);\n      const blockRange = { anchor, focus: blockStart }; \n      const blockText = Editor.string(editor, blockRange);\n      const lastSpaceIndex = blockText.lastIndexOf(\" \");\n      const textAfterLastSpace = lastSpaceIndex !== -1 ? blockText.slice(lastSpaceIndex) : blockText;\n\n      const [especialCharLastButOneRelativeIndex, especialCharLastRelativeIndex] = _findLastTwoIndexOf(textAfterLastSpace, '$');\n\n      if (_isThereTextBetweenTwo$(especialCharLastButOneRelativeIndex, especialCharLastRelativeIndex)){\n        const especialCharLastButOneIndex = especialCharLastButOneRelativeIndex + lastSpaceIndex;\n        const fromLastButOneCharToEndRange = { anchor, focus: { path, offset: especialCharLastButOneIndex - blockStart.offset } };\n\n        _insertMathInlineAt(editor, fromLastButOneCharToEndRange);\n      }\n    }\n\n    insertText(text);\n  };\n\n  editor.deleteBackward = (...args) => {\n    const { selection } = editor;\n\n    if (_noSelection(selection)) {\n      const { anchor } = selection;\n      const { path } = anchor;\n\n      const endPoint = Editor.end(editor, path);\n\n      if (_isThereAMathInlineBlockPrevious(editor, endPoint) &&\n        _isCurrentPointTheStartOfLocation(editor, endPoint, path)\n      ) {\n        const mathInlineBlock = _getPreviousBlock(editor, endPoint);\n        const mathContent = mathInlineBlock.content;\n        deleteBackward(...args);\n        editor.insertText('$' + mathContent);\n      } else {\n        deleteBackward(...args);\n      }\n    }\n  }\n\n  return editor;\n};\n\nconst _isThereAMathInlineBlockPrevious = (editor, endPoint) => {\n  const previousBlock = _getPreviousBlock(editor, endPoint);\n  return previousBlock && previousBlock.type === \"mathInline\";\n};\n\nconst _isCurrentPointTheStartOfLocation = (editor, endPoint, path) => Editor.isStart(editor, endPoint, path);\n\nconst _noSelection = selection => selection && Range.isCollapsed(selection);\n\nconst _isThereTextBetweenTwo$ = (first$Index, second$charIndex) => {\n  return first$Index !== -1 && second$charIndex !== 1;\n}\n\nconst _findLastTwoIndexOf = (string, char) => {\n  const charLastIndex = string.lastIndexOf(char);\n\n  if (charLastIndex === -1) return [-1, -1];\n\n  const charLastButOneIndex = string.slice(0, charLastIndex).lastIndexOf(char);\n  \n  return [charLastButOneIndex, charLastIndex];\n};\n\nconst _getPreviousBlock = (editor, endPoint) => {\n  const previousNode = Editor.previous(editor, { at: endPoint } );\n  return previousNode && previousNode[0];\n};\n\nconst _insertMathInlineAt = (editor, range) => {\n  const content = Editor.string(editor, range);\n\n  Transforms.select(editor, range);\n  Transforms.delete(editor);\n  Transforms.insertNodes(\n    editor,\n    { type: 'mathInline', content: content.slice(1,-1), children: [{ text: \"\" }] }\n  );\n};","export const ImageUploader = {\n  getBase64FromFile(file) {\n    let reader = new FileReader();\n\n    return new Promise((accept, fail) => {\n      reader.onload = () => accept(reader.result);\n      reader.onerror = () => fail(reader.error);\n      reader.readAsDataURL(file);\n    });\n  }\n};","import React, { useMemo, useState, useCallback, useRef } from 'react';\nimport { createEditor } from 'slate';\nimport { Slate, Editable, withReact } from 'slate-react';\nimport { withHistory } from 'slate-history';\nimport MathJax from 'react-mathjax2';\n\nimport { renderLeaf, renderElement } from './slate/renders';\nimport { MioHelpers } from './slate/helpers';\nimport { withInline, withImage, withInlineMath } from './slate/plugins';\n\nimport { ImageUploader } from './services';\n\nimport './stylesheets/App.scss';\n\nconst App = () => {\n  const editor = useMemo(() => withInlineMath(withImage(withInline(withHistory(withReact(createEditor()))))), []);\n  const imageInput = useRef(null);\n  const [value, setValue] = useState(JSON.parse(localStorage.getItem('content')) || initialValue);\n\n  const onValueChange = value => {\n    setValue(value);\n    saveInLocalStorage(value);\n  }\n\n  const saveInLocalStorage = value => {\n    const content = JSON.stringify(value);\n    localStorage.setItem('content', content);\n    console.log(content);\n  }\n\n  const uploadImage = event => {\n    if (event.target.files.length === 0) return; \n    \n    const file = event.target.files[0];\n    ImageUploader.getBase64FromFile(file).then(\n      base64 => MioHelpers.insertImage(editor, base64),\n      error => console.log(error)\n    );\n  };\n  \n  return (\n    <Slate editor={editor} value={value} onChange={onValueChange}>\n      <input\n        id=\"file-upload\"\n        type=\"file\"\n        accept=\"image/png, image/jpeg\"\n        ref={imageInput}\n        onChange={uploadImage}\n      />\n      <div className=\"mio-editor\">\n      <MathJax.Context \n        script=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_SVG\"\n        options={MATH_JAX_OPTIONS}\n      >\n        <Editable \n          renderLeaf={useCallback(renderLeaf)}\n          renderElement={useCallback(renderElement)}\n          onKeyDown={event => MioHelpers.onKeyDown(event, editor)}\n          autoFocus\n          spellCheck\n        />\n      </MathJax.Context>\n      </div>\n    </Slate>\n  );\n};\n\nconst MATH_JAX_OPTIONS = {\n  jax: ['input/ascii', 'output/SVG'],\n  showMathMenu: false,\n};\n\nconst initialValue = [\n  {\n    type: 'paragraph',\n    children: [{ text: 'A line of a paragraph...'}],\n  },\n]\n\nexport default App;\n\n","export const withImage = editor => {\n  const { isVoid } = editor;\n\n  editor.isVoid = element => {\n    return element.type === 'image' || element.type === 'mathInline'? true : isVoid(element);\n  };\n\n  return editor;\n};","export const withInline = editor => {\n  const { isInline } = editor;\n\n  editor.isInline = element => {\n    return [\"code\", \"mathInline\"].includes(element.type) ? true : isInline(element);\n  }\n\n  return editor;\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}